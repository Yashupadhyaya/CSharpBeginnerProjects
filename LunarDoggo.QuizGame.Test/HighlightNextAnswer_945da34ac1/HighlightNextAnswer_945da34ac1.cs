// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class HighlightNextAnswer_945da34ac1
    {
        private GameState gameState;
        private QuizQuestion question1, question2;
        private QuizQuestionAnswer answer1, answer2, answer3, answer4;

        [SetUp]
        public void Setup()
        {
            answer1 = new QuizQuestionAnswer { IsCorrect = true, Text = "Answer 1" };
            answer2 = new QuizQuestionAnswer { IsCorrect = false, Text = "Answer 2" };
            answer3 = new QuizQuestionAnswer { IsCorrect = true, Text = "Answer 3" };
            answer4 = new QuizQuestionAnswer { IsCorrect = false, Text = "Answer 4" };
            question1 = new QuizQuestion { Answers = new QuizQuestionAnswer[] { answer1, answer2 }, Text = "Question 1" };
            question2 = new QuizQuestion { Answers = new QuizQuestionAnswer[] { answer3, answer4 }, Text = "Question 2" };
            gameState = new GameState(new List<QuizQuestion> { question1, question2 });
        }

        [Test]
        public void Test_HighlightNextAnswer_WhenCalled_ShouldChangeHighlightedAnswer()
        {
            // Act
            gameState.HighlightNextAnswer();

            // Assert
            Assert.AreEqual(answer2, gameState.HighlightedAnswer);
        }

        [Test]
        public void Test_HighlightNextAnswer_WhenCalledTwice_ShouldLoopBackToFirstAnswer()
        {
            // Act
            gameState.HighlightNextAnswer();
            gameState.HighlightNextAnswer();

            // Assert
            Assert.AreEqual(answer1, gameState.HighlightedAnswer);
        }
    }
}
