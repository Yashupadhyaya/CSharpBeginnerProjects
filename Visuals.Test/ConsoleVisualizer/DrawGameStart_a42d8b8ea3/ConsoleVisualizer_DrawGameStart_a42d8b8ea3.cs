// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

// Using directives
using NUnit.Framework;
using System;
using System.IO;

// Test class
[TestFixture]
public class ConsoleVisualizer_DrawGameStart_a42d8b8ea3
{
    // Test method 1 - Verify the output when totalQuestionCount is zero
    [Test]
    public void DrawGameStart_TotalQuestionCountZero_ReturnsCorrectOutput()
    {
        // Arrange
        int totalQuestionCount = 0;
        StringWriter stringWriter = new StringWriter();
        Console.SetOut(stringWriter);
        
        // Act
        DrawGameStart(totalQuestionCount);
        string output = stringWriter.ToString();
        
        // Assert
        Assert.AreEqual("0 questions were loaded, press \"enter\" to start the game.\r\n", output);
    }
    
    // Test method 2 - Verify the output when totalQuestionCount is one
    [Test]
    public void DrawGameStart_TotalQuestionCountOne_ReturnsCorrectOutput()
    {
        // Arrange
        int totalQuestionCount = 1;
        StringWriter stringWriter = new StringWriter();
        Console.SetOut(stringWriter);
        
        // Act
        DrawGameStart(totalQuestionCount);
        string output = stringWriter.ToString();
        
        // Assert
        Assert.AreEqual("1 question was loaded, press \"enter\" to start the game.\r\n", output);
    }
    
    // Test method 3 - Verify the output when totalQuestionCount is greater than one
    [Test]
    public void DrawGameStart_TotalQuestionCountGreaterThanOne_ReturnsCorrectOutput()
    {
        // Arrange
        int totalQuestionCount = 5;
        StringWriter stringWriter = new StringWriter();
        Console.SetOut(stringWriter);
        
        // Act
        DrawGameStart(totalQuestionCount);
        string output = stringWriter.ToString();
        
        // Assert
        Assert.AreEqual("5 questions were loaded, press \"enter\" to start the game.\r\n", output);
    }
}
