// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using System.IO;
using System.Collections.Generic;
using LunarDoggo.QuizGame.Visuals;
using NUnit.Framework;

namespace LunarDoggo.QuizGame.Visuals.Test
{
    [TestFixture]
    public class DrawQuizQuestion_1d352aaa00
    {
        private ConsoleVisualizer _consoleVisualizer;
        private StringWriter _stringWriter;

        [SetUp]
        public void SetUp()
        {
            _consoleVisualizer = new ConsoleVisualizer();
            _stringWriter = new StringWriter();
            Console.SetOut(_stringWriter);
        }

        [Test]
        public void DrawQuizQuestion_WithHighlightedAnswer_ShouldDisplayQuestionAndHighlightedAnswer()
        {
            var questionId = Guid.NewGuid();
            var answerId = Guid.NewGuid();

            var question = new QuizQuestion
            {
                Id = questionId,
                Question = "What is the capital of France?",
                Answers = new List<QuizQuestionAnswer>
                {
                    new QuizQuestionAnswer { Id = answerId, Answer = "Paris" },
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "London" }
                }
            };

            _consoleVisualizer.DrawQuizQuestion(question, answerId);

            var output = _stringWriter.GetStringBuilder().ToString();

            Assert.IsTrue(output.Contains(question.Question));
            Assert.IsTrue(output.Contains("(*) Paris"));
            Assert.IsFalse(output.Contains("(*) London"));
        }

        [Test]
        public void DrawQuizQuestion_WithoutHighlightedAnswer_ShouldDisplayQuestionAndNoHighlightedAnswer()
        {
            var questionId = Guid.NewGuid();

            var question = new QuizQuestion
            {
                Id = questionId,
                Question = "What is the capital of France?",
                Answers = new List<QuizQuestionAnswer>
                {
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Paris" },
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "London" }
                }
            };

            _consoleVisualizer.DrawQuizQuestion(question, Guid.NewGuid());

            var output = _stringWriter.GetStringBuilder().ToString();

            Assert.IsTrue(output.Contains(question.Question));
            Assert.IsFalse(output.Contains("(*) Paris"));
            Assert.IsFalse(output.Contains("(*) London"));
        }

        [TearDown]
        public void TearDown()
        {
            _stringWriter.Close();
        }
    }
}
