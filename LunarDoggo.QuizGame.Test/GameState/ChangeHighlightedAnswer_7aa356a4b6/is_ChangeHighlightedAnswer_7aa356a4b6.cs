// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;

[TestFixture]
public class is_ChangeHighlightedAnswer_7aa356a4b6
{
    private MyClass myClass;

    [SetUp]
    public void SetUp()
    {
        // Initialize any necessary dependencies or mocks before each test
        myClass = new MyClass();
    }

    [TestCase(1)]
    public void ChangeHighlightedAnswer_IndexIncrementIsPositive_IncrementHighlightedAnswerIndex(int indexIncrement)
    {
        // Arrange
        int initialHighlightedAnswerIndex = myClass.highlightedAnswerIndex;
        int initialAnswerCount = myClass.CurrentQuestion.Answers.Length;
        int expectedHighlightedAnswerIndex = (initialHighlightedAnswerIndex + indexIncrement) % initialAnswerCount;

        // Act
        myClass.ChangeHighlightedAnswer(indexIncrement);

        // Assert
        Assert.AreEqual(expectedHighlightedAnswerIndex, myClass.highlightedAnswerIndex);
    }

    [TestCase(-1)]
    public void ChangeHighlightedAnswer_IndexIncrementIsNegative_DecrementHighlightedAnswerIndex(int indexIncrement)
    {
        // Arrange
        int initialHighlightedAnswerIndex = myClass.highlightedAnswerIndex;
        int initialAnswerCount = myClass.CurrentQuestion.Answers.Length;
        int expectedHighlightedAnswerIndex = (initialHighlightedAnswerIndex + indexIncrement + initialAnswerCount) % initialAnswerCount;

        // Act
        myClass.ChangeHighlightedAnswer(indexIncrement);

        // Assert
        Assert.AreEqual(expectedHighlightedAnswerIndex, myClass.highlightedAnswerIndex);
    }

    [TestCase(0)]
    public void ChangeHighlightedAnswer_IndexIncrementIsZero_DoNotChangeHighlightedAnswerIndex(int indexIncrement)
    {
        // Arrange
        int initialHighlightedAnswerIndex = myClass.highlightedAnswerIndex;

        // Act
        myClass.ChangeHighlightedAnswer(indexIncrement);

        // Assert
        Assert.AreEqual(initialHighlightedAnswerIndex, myClass.highlightedAnswerIndex);
    }
}

public class MyClass
{
    public Question CurrentQuestion { get; set; }
    public int highlightedAnswerIndex;

    public void ChangeHighlightedAnswer(int indexIncrement)
    {
        int answerCount = this.CurrentQuestion.Answers.Length;
        this.highlightedAnswerIndex += indexIncrement;

        if (this.highlightedAnswerIndex >= answerCount)
        {
            this.highlightedAnswerIndex = 0;
        }
        else if (this.highlightedAnswerIndex < 0)
        {
            this.highlightedAnswerIndex = answerCount - 1;
        }
    }
}

public class Question
{
    public Answer[] Answers { get; set; }
}

public class Answer
{
    public string Text { get; set; }
}
