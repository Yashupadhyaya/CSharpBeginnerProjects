// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.QuizGame;
using System.Collections.Generic;
using System;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class MoveToNextQuestion_2455d33844
    {
        private GameState gameState;
        private List<QuizQuestion> questions;

        [SetUp]
        public void SetUp()
        {
            questions = new List<QuizQuestion>
            {
                new QuizQuestion
                {
                    Question = "Question1",
                    Answers = new QuizQuestionAnswer[]
                    {
                        new QuizQuestionAnswer { Answer = "Answer1", IsCorrect = true },
                        new QuizQuestionAnswer { Answer = "Answer2", IsCorrect = false }
                    }
                },
                new QuizQuestion
                {
                    Question = "Question2",
                    Answers = new QuizQuestionAnswer[]
                    {
                        new QuizQuestionAnswer { Answer = "Answer3", IsCorrect = false },
                        new QuizQuestionAnswer { Answer = "Answer4", IsCorrect = true }
                    }
                }
            };
            gameState = new GameState(questions);
        }

        [Test]
        public void MoveToNextQuestion_HasUnansweredQuestions_CurrentQuestionIsSet()
        {
            gameState.MoveToNextQuestion();

            Assert.IsNotNull(gameState.CurrentQuestion);
            Assert.IsFalse(gameState.IsCurrentQuestionAnswered);
            Assert.IsNull(gameState.ChosenAnswer);
        }

        [Test]
        public void MoveToNextQuestion_NoUnansweredQuestions_CurrentQuestionIsNotSet()
        {
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();

            Assert.IsNull(gameState.CurrentQuestion);
            Assert.IsFalse(gameState.IsCurrentQuestionAnswered);
            Assert.IsNull(gameState.ChosenAnswer);
        }
    }
}
