// Test generated by RoostGPT for test demo5 using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using System;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class contains_UpdateScreen_7c178b7f99
    {
        private Quiz game;
        private MockVisualizer visualizer;

        [SetUp]
        public void Setup()
        {
            this.visualizer = new MockVisualizer();
            this.game = new Quiz(this.visualizer);
        }

        [Test]
        public void UpdateScreen_ShouldCallDrawGameStart_WhenGameIsNotStarted()
        {
            game.UpdateScreen();

            Assert.IsTrue(visualizer.DrawGameStartCalled);
        }

        [Test]
        public void UpdateScreen_ShouldCallDrawQuizQuestion_WhenCurrentQuestionExists()
        {
            game.Start();
            game.UpdateScreen();

            Assert.IsTrue(visualizer.DrawQuizQuestionCalled);
        }

        [Test]
        public void UpdateScreen_ShouldCallDrawAnswerStatus_WhenCurrentQuestionIsAnswered()
        {
            game.Start();
            game.AnswerQuestion(1);
            game.UpdateScreen();

            Assert.IsTrue(visualizer.DrawAnswerStatusCalled);
        }

        [Test]
        public void UpdateScreen_ShouldCallDrawGameResult_WhenNoUnansweredQuestions()
        {
            game.Start();
            game.AnswerQuestion(1);
            game.AnswerQuestion(2);
            game.UpdateScreen();

            Assert.IsTrue(visualizer.DrawGameResultCalled);
        }
    }

    public class MockVisualizer : IVisualizer
    {
        public bool DrawGameStartCalled { get; private set; }
        public bool DrawQuizQuestionCalled { get; private set; }
        public bool DrawAnswerStatusCalled { get; private set; }
        public bool DrawGameResultCalled { get; private set; }

        public void DrawGameStart(int totalQuestionCount)
        {
            DrawGameStartCalled = true;
        }

        public void DrawQuizQuestion(Question question, int highlightedAnswerId)
        {
            DrawQuizQuestionCalled = true;
        }

        public void DrawAnswerStatus(bool isCorrect, string correctAnswer)
        {
            DrawAnswerStatusCalled = true;
        }

        public void DrawGameResult(int totalQuestionCount, int correctAnswersCount)
        {
            DrawGameResultCalled = true;
        }
    }
}
