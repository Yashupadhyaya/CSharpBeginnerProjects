// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using NUnit.Framework;
using LunarDoggo.QuizGame.Visuals;
using Moq;
using System.IO;
using System.Linq;

namespace LunarDoggo.QuizGame.Visuals.Test
{
    [TestFixture]
    public class DrawQuizQuestion_1d352aaa00
    {
        private Mock<TextWriter> mockOut;
        private StringWriter stringWriter;
        private ConsoleVisualizer consoleVisualizer;

        [SetUp]
        public void SetUp()
        {
            this.stringWriter = new StringWriter();
            this.mockOut = new Mock<TextWriter>();
            Console.SetOut(this.mockOut.Object);
            this.consoleVisualizer = new ConsoleVisualizer();
        }

        [TearDown]
        public void TearDown()
        {
            Console.SetOut(new StreamWriter(Console.OpenStandardOutput()));
            this.stringWriter.Dispose();
        }

        [Test]
        public void TestDrawQuizQuestionWithHighlightedAnswer()
        {
            var highlightedAnswerId = Guid.NewGuid();
            var question = new QuizQuestion
            {
                Question = "Test Question",
                Answers = new[]
                {
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Answer 1" },
                    new QuizQuestionAnswer { Id = highlightedAnswerId, Answer = "Answer 2" },
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Answer 3" },
                }
            };

            this.consoleVisualizer.DrawQuizQuestion(question, highlightedAnswerId);

            this.mockOut.Verify(_ => _.WriteLine(It.IsAny<string>()), Times.Exactly(5));
            this.mockOut.Verify(_ => _.WriteLine(question.Question), Times.Once);
            this.mockOut.Verify(_ => _.WriteLine("({0}) {1}", "*", question.Answers.First(a => a.Id == highlightedAnswerId).Answer), Times.Once);
        }

        [Test]
        public void TestDrawQuizQuestionWithoutHighlightedAnswer()
        {
            var question = new QuizQuestion
            {
                Question = "Test Question",
                Answers = new[]
                {
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Answer 1" },
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Answer 2" },
                    new QuizQuestionAnswer { Id = Guid.NewGuid(), Answer = "Answer 3" },
                }
            };

            this.consoleVisualizer.DrawQuizQuestion(question, Guid.Empty);

            this.mockOut.Verify(_ => _.WriteLine(It.IsAny<string>()), Times.Exactly(5));
            this.mockOut.Verify(_ => _.WriteLine(question.Question), Times.Once);
            this.mockOut.Verify(_ => _.WriteLine("({0}) {1}", "*", It.IsAny<string>()), Times.Never);
        }
    }
}
