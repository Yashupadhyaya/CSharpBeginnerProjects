// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.FileSystemTree.Test;
using System.Collections.Generic;

namespace LunarDoggo.FileSystemTree.Test
{
    public class FileSystemTreeItem_2e95657d4a
    {
        FileSystemTreeItem treeItem;

        [SetUp]
        public void Setup()
        {
            treeItem = new FileSystemTreeItem("root", FileSystemTreeItemType.Folder, new List<FileSystemTreeItem>());
        }

        [Test]
        public void FileSystemTreeItem_ConstructorWithValidParameters_Success()
        {
            Assert.IsNotNull(treeItem);
            Assert.AreEqual("root", treeItem.name);
            Assert.AreEqual(FileSystemTreeItemType.Folder, treeItem.type);
            CollectionAssert.IsEmpty(treeItem.children);
        }

        [Test]
        public void FileSystemTreeItem_ConstructorWithChildren_Success()
        {
            var childItem = new FileSystemTreeItem("child", FileSystemTreeItemType.File, new List<FileSystemTreeItem>());
            treeItem.children.Add(childItem);

            Assert.AreEqual(1, treeItem.children.Count);
            Assert.AreEqual("child", treeItem.children[0].name);
            Assert.AreEqual(FileSystemTreeItemType.File, treeItem.children[0].type);
            CollectionAssert.IsEmpty(treeItem.children[0].children);
        }

        [Test]
        public void FileSystemTreeItem_ConstructorWithNullName_Failure()
        {
            Assert.Throws<ArgumentNullException>(() => new FileSystemTreeItem(null, FileSystemTreeItemType.Folder, new List<FileSystemTreeItem>()));
        }

        [Test]
        public void FileSystemTreeItem_ConstructorWithNullChildren_Failure()
        {
            Assert.Throws<ArgumentNullException>(() => new FileSystemTreeItem("root", FileSystemTreeItemType.Folder, null));
        }

        [TearDown]
        public void TearDown()
        {
            treeItem = null;
        }
    }
}
