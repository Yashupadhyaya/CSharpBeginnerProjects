// Test generated by RoostGPT for test demo5 using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using LunarDoggo.QuizGame;
using System.Collections.Generic;
using System;
using Moq; // Add this namespace to fix the first error

namespace LunarDoggo.QuizGame.Test
{
    public class GameLoopTests
    {
        private Mock<IVisualizer> mockVisualizer; // Make sure the IVisualizer interface is defined in your project
        private IEnumerable<QuizQuestion> questions;

        [SetUp]
        public void Setup()
        {
            this.mockVisualizer = new Mock<IVisualizer>();
            this.questions = new List<QuizQuestion>
            {
                new QuizQuestion { Question = "Question 1", Answer = "Answer 1" },
                new QuizQuestion { Question = "Question 2", Answer = "Answer 2" }
            };
        }

        [Test]
        public void GameLoop_Constructor_ValidParameters_SuccessfulInitialization()
        {
            var gameLoop = new GameLoop(this.mockVisualizer.Object, this.questions);

            Assert.IsNotNull(gameLoop);
        }

        [Test]
        public void GameLoop_Constructor_NullVisualizer_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new GameLoop(null, this.questions));
        }

        [Test]
        public void GameLoop_Constructor_NullQuestions_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new GameLoop(this.mockVisualizer.Object, null));
        }

        [Test]
        public void GameLoop_Constructor_EmptyQuestions_ThrowsArgumentException()
        {
            this.questions = new List<QuizQuestion>();

            Assert.Throws<ArgumentException>(() => new GameLoop(this.mockVisualizer.Object, this.questions));
        }
    }
}
