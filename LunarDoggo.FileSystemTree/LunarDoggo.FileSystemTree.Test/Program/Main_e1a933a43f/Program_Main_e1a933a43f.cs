// Test generated by RoostGPT for test test-dummy using AI Type Open AI and AI Model gpt-4

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Collections.Immutable;
using NUnit.Framework;
using LunarDoggo.FileSystemTree;

namespace LunarDoggo.FileSystemTree.Tests
{
    [TestFixture]
    public class ProgramTests
    {
        [Test]
        public void TestProgram_Main_e1a933a43f()
        {
            // Arrange
            string expectedBaseDirectoryPath = AppDomain.CurrentDomain.BaseDirectory;
            DirectoryInfo expectedBaseDirectory = new DirectoryInfo(expectedBaseDirectoryPath);

            // Act
            string actualBaseDirectoryPath = Program.GetBaseDirectoryPath();
            DirectoryInfo actualBaseDirectory = new DirectoryInfo(actualBaseDirectoryPath);

            // Assert
            Assert.AreEqual(expectedBaseDirectory.FullName, actualBaseDirectory.FullName, "Base directory paths do not match");

            // Act
            FileSystemTreeItem expectedFileSystemTree = Program.GetFileSystemTree(expectedBaseDirectory);
            FileSystemTreeItem actualFileSystemTree = Program.GetFileSystemTree(actualBaseDirectory);

            // Assert
            Assert.AreEqual(expectedFileSystemTree.Name, actualFileSystemTree.Name, "File system tree root names do not match");

            // TODO: Add more assertions to verify the entire file system tree if necessary
        }

        [Test]
        public void TestProgram_Main_InvalidDirectory()
        {
            // Arrange
            string invalidDirectoryPath = @"C:\InvalidDirectoryPath";

            // Act
            var ex = Assert.Throws<DirectoryNotFoundException>(() => Program.GetBaseDirectoryPath(invalidDirectoryPath));

            // Assert
            StringAssert.StartsWith("Could not find a part of the path", ex.Message);
        }
    }
}
