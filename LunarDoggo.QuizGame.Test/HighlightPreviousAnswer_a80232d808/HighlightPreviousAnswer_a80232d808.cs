// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System.Collections.Generic;
using System.Linq;
using System;
using NUnit.Framework;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class HighlightPreviousAnswer_a80232d808
    {
        [Test]
        public void HighlightPreviousAnswer_WhenCalled_ChangesHighlightedAnswerIndex()
        {
            // Arrange
            var questions = new List<QuizQuestion>()
            {
                new QuizQuestion { Answers = new QuizQuestionAnswer[] { new QuizQuestionAnswer(), new QuizQuestionAnswer() } },
                new QuizQuestion { Answers = new QuizQuestionAnswer[] { new QuizQuestionAnswer(), new QuizQuestionAnswer() } }
            };
            var gameState = new GameState(questions);
            gameState.MoveToNextQuestion();

            // Act
            gameState.HighlightPreviousAnswer();

            // Assert
            Assert.AreEqual(questions[0].Answers.Length - 1, GetHighlightedAnswerIndex(gameState));
        }

        [Test]
        public void HighlightPreviousAnswer_WhenCalledTwice_ChangesHighlightedAnswerIndexToZero()
        {
            // Arrange
            var questions = new List<QuizQuestion>()
            {
                new QuizQuestion { Answers = new QuizQuestionAnswer[] { new QuizQuestionAnswer(), new QuizQuestionAnswer() } },
                new QuizQuestion { Answers = new QuizQuestionAnswer[] { new QuizQuestionAnswer(), new QuizQuestionAnswer() } }
            };
            var gameState = new GameState(questions);
            gameState.MoveToNextQuestion();

            // Act
            gameState.HighlightPreviousAnswer();
            gameState.HighlightPreviousAnswer();

            // Assert
            Assert.AreEqual(0, GetHighlightedAnswerIndex(gameState));
        }

        private int GetHighlightedAnswerIndex(GameState gameState)
        {
            return gameState.HighlightedAnswer.Id;
        }
    }
}
