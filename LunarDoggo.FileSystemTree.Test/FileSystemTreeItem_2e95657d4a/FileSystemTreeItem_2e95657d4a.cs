// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.FileSystemTree.Test;
using System.Collections.Generic;

namespace LunarDoggo.FileSystemTree.Test
{
    public class FileSystemTreeItem_2e95657d4a
    {
        FileSystemTreeItem treeItem;

        [SetUp]
        public void Setup()
        {
            treeItem = new FileSystemTreeItem("root", FileSystemTreeItemType.Directory, new List<FileSystemTreeItem>());
        }

        [Test]
        public void Constructor_WhenCalled_SetsNameAndTypeAndChildren()
        {
            Assert.That(treeItem.Name, Is.EqualTo("root"));
            Assert.That(treeItem.Type, Is.EqualTo(FileSystemTreeItemType.Directory));
            Assert.That(treeItem.Children, Is.Not.Null);
        }

        [Test]
        public void Constructor_WhenCalledWithNullChildren_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new FileSystemTreeItem("root", FileSystemTreeItemType.Directory, null));
        }

        [Test]
        public void Constructor_WhenCalledWithEmptyName_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new FileSystemTreeItem("", FileSystemTreeItemType.Directory, new List<FileSystemTreeItem>()));
        }

        [Test]
        public void Constructor_WhenCalledWithNullName_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new FileSystemTreeItem(null, FileSystemTreeItemType.Directory, new List<FileSystemTreeItem>()));
        }

        [Test]
        public void Constructor_WhenCalledWithInvalidType_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new FileSystemTreeItem("root", (FileSystemTreeItemType)100, new List<FileSystemTreeItem>()));
        }
    }
}
