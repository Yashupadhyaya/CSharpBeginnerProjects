// Test generated by RoostGPT for test test-dummy using AI Type Open AI and AI Model gpt-4

using System.Collections.Generic;
using NUnit.Framework;

namespace LunarDoggo.FileSystemTree
{
    public enum FileSystemTreeItemType
    {
        File,
        Folder
    }

    public class FileSystemTreeItem
    {
        public string Name { get; set; }
        public FileSystemTreeItemType Type { get; set; }
        public List<FileSystemTreeItem> Children { get; set; }

        public FileSystemTreeItem(string name, FileSystemTreeItemType type, List<FileSystemTreeItem> children)
        {
            this.Name = name;
            this.Type = type;
            this.Children = children;
        }
    }

    [TestFixture]
    public class FileSystemTreeItemTest
    {
        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_a6b8e2882a()
        {
            // Arrange
            var child1 = new FileSystemTreeItem("child1", FileSystemTreeItemType.File, null);
            var child2 = new FileSystemTreeItem("child2", FileSystemTreeItemType.File, null);
            var children = new List<FileSystemTreeItem> { child1, child2 };

            var expectedName = "test";
            var expectedType = FileSystemTreeItemType.Folder;

            // Act
            var item = new FileSystemTreeItem(expectedName, expectedType, children);

            // Assert
            Assert.AreEqual(expectedName, item.Name);
            Assert.AreEqual(expectedType, item.Type);
            Assert.AreEqual(children, item.Children);
        }

        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_NullChildren()
        {
            // Arrange
            var expectedName = "test";
            var expectedType = FileSystemTreeItemType.Folder;

            // Act
            var item = new FileSystemTreeItem(expectedName, expectedType, null);

            // Assert
            Assert.AreEqual(expectedName, item.Name);
            Assert.AreEqual(expectedType, item.Type);
            Assert.IsNull(item.Children);
        }
    }
}
