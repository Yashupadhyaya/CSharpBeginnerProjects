// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.QuizGame;
using LunarDoggo.QuizGame.Visuals;
using System.Collections.Generic;
using System;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class GameLoop_9934739d22
    {
        private IVisualizer visualizer;
        private List<QuizQuestion> questions;

        [SetUp]
        public void Setup()
        {
            visualizer = new MockVisualizer();
            questions = new List<QuizQuestion>
            {
                new QuizQuestion("Question 1", new List<QuizAnswer>
                {
                    new QuizAnswer("Answer 1", true),
                    new QuizAnswer("Answer 2", false),
                }),
                new QuizQuestion("Question 2", new List<QuizAnswer>
                {
                    new QuizAnswer("Answer 1", false),
                    new QuizAnswer("Answer 2", true),
                })
            };
        }

        [Test]
        public void Test_GameLoop_Constructor()
        {
            GameLoop gameLoop = new GameLoop(visualizer, questions);

            Assert.IsNotNull(gameLoop);
            Assert.IsFalse(gameLoop.IsFinished);
        }

        [Test]
        public void Test_GameLoop_WithNoQuestions()
        {
            List<QuizQuestion> emptyQuestions = new List<QuizQuestion>();

            Assert.Throws<ArgumentException>(() => new GameLoop(visualizer, emptyQuestions));
        }
    }

    //Mock Visualizer class
    public class MockVisualizer : IVisualizer
    {
        public void DrawAnswerStatus(bool isCorrect, QuizAnswer correctAnswer) { }

        public void DrawGameResult(int totalQuestions, int correctAnswers) { }

        public void DrawGameStart(int totalQuestions) { }

        public void DrawQuizQuestion(QuizQuestion question, Guid highlightedAnswerId) { }
    }
}
