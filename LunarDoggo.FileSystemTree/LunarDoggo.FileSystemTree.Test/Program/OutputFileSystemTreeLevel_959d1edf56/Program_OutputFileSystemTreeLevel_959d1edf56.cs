// Test generated by RoostGPT for test int-test using AI Type Open AI and AI Model gpt-3.5-turbo-0301

using NUnit.Framework;
using System.Collections.Generic;
using System.Linq;

namespace FileSystemTree.Tests
{
    [TestFixture]
    public class ProgramTests
    {
        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_959d1edf56()
        {
            // Arrange
            var item = new FileSystemTreeItem
            {
                Name = "Root",
                Type = FileSystemItemType.Folder,
                Children = new List<FileSystemTreeItem>
                {
                    new FileSystemTreeItem
                    {
                        Name = "Folder1",
                        Type = FileSystemItemType.Folder,
                        Children = new List<FileSystemTreeItem>
                        {
                            new FileSystemTreeItem
                            {
                                Name = "File1",
                                Type = FileSystemItemType.File
                            }
                        }
                    },
                    new FileSystemTreeItem
                    {
                        Name = "Folder2",
                        Type = FileSystemItemType.Folder,
                        Children = new List<FileSystemTreeItem>
                        {
                            new FileSystemTreeItem
                            {
                                Name = "File2",
                                Type = FileSystemItemType.File
                            }
                        }
                    }
                }
            };

            var expectedOutput = "Root (Folder)\n  Folder1 (Folder)\n    File1 (File)\n  Folder2 (Folder)\n    File2 (File)\n";

            // Act
            using (var consoleOutput = new ConsoleOutput())
            {
                Program.OutputFileSystemTreeLevel(0, item);
                var actualOutput = consoleOutput.GetOutput();

                // Assert
                Assert.AreEqual(expectedOutput, actualOutput);
            }
        }

        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_WithNullChildren()
        {
            // Arrange
            var item = new FileSystemTreeItem
            {
                Name = "Root",
                Type = FileSystemItemType.Folder,
                Children = null
            };

            var expectedOutput = "Root (Folder)\n";

            // Act
            using (var consoleOutput = new ConsoleOutput())
            {
                Program.OutputFileSystemTreeLevel(0, item);
                var actualOutput = consoleOutput.GetOutput();

                // Assert
                Assert.AreEqual(expectedOutput, actualOutput);
            }
        }
    }
}
