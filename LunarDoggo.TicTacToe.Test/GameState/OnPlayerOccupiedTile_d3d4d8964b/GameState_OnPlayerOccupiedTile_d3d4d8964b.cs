// Test generated by RoostGPT for test demo56 using AI Type Open AI and AI Model gpt-4

using System;
using System.Linq;
using NUnit.Framework;
using LunarDoggo.TicTacToe; // Added missing namespace
using LunarDoggo.TicTacToe.Models; // Added missing namespace for Player

namespace TicTacToe.Tests
{
    [TestFixture]
    public class TicTacToeTests
    {
        private TicTacToeGame game;
        private Player player1;
        private Player player2;

        [SetUp]
        public void SetUp()
        {
            game = new TicTacToeGame();
            player1 = new Player { Display = "X" };
            player2 = new Player { Display = "O" };
            game.AddPlayer(player1);
            game.AddPlayer(player2);
        }

        [Test]
        public void TestGameState_OnPlayerOccupiedTile_d3d4d8964b()
        {
            // Arrange
            var eventArgs = new PlayerTileEventArgs { Player = player1, TileX = 1, TileY = 1 };

            // Act
            game.OnPlayerOccupiedTile(this, eventArgs);

            // Assert
            var occupiedTile = game.buttonTileMappings.Single(_mapping => _mapping.TileX == eventArgs.TileX && _mapping.TileY == eventArgs.TileY);
            Assert.AreEqual(eventArgs.Player.Display, occupiedTile.Button.Content);
        }

        [Test]
        public void TestGameState_OnPlayerOccupiedTile_InvalidTile()
        {
            // Arrange
            var eventArgs = new PlayerTileEventArgs { Player = player1, TileX = 4, TileY = 4 };

            // Act & Assert
            Assert.Throws<InvalidOperationException>(() => game.OnPlayerOccupiedTile(this, eventArgs));
        }
    }
}
