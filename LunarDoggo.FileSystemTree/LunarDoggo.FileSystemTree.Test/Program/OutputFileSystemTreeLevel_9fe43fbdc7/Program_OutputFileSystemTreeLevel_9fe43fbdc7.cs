// Test generated by RoostGPT for test csharpunit using AI Type Open AI and AI Model gpt-4

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using LunarDoggo.FileSystemTree;

namespace LunarDoggo.FileSystemTree.Tests
{
    public class FileSystemTreeItem
    {
        public string Name { get; set; }
        public string Type { get; set; }
        public List<FileSystemTreeItem> Children { get; set; }
    }

    public class Program
    {
        public static void OutputFileSystemTreeLevel(int level, FileSystemTreeItem item)
        {
            // Implementation of OutputFileSystemTreeLevel method
        }
    }

    [TestFixture]
    public class ProgramTests
    {
        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_9fe43fbdc7()
        {
            // Arrange
            var item = new FileSystemTreeItem
            {
                Name = "Root",
                Type = "Folder",
                Children = new List<FileSystemTreeItem>
                {
                    new FileSystemTreeItem { Name = "Child1", Type = "File" },
                    new FileSystemTreeItem { Name = "Child2", Type = "Folder", Children = new List<FileSystemTreeItem> { new FileSystemTreeItem { Name = "GrandChild", Type = "File" } } }
                }
            };
            var expectedOutput = "Root (Folder)\n  Child1 (File)\n  Child2 (Folder)\n    GrandChild (File)\n";

            // Act
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);
                Program.OutputFileSystemTreeLevel(0, item);

                // Assert
                Assert.AreEqual(expectedOutput, sw.ToString());
            }
        }

        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_EmptyTree_9fe43fbdc7()
        {
            // Arrange
            var item = new FileSystemTreeItem { Name = "Root", Type = "Folder" };
            var expectedOutput = "Root (Folder)\n";

            // Act
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);
                Program.OutputFileSystemTreeLevel(0, item);

                // Assert
                Assert.AreEqual(expectedOutput, sw.ToString());
            }
        }
    }
}
