// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;
using System;
using System.IO;

[TestFixture]
public class ConsoleVisualizer_DrawGameResult_189e648b4a
{
    private StringWriter consoleOutput;

    [SetUp]
    public void SetUp()
    {
        consoleOutput = new StringWriter();
        Console.SetOut(consoleOutput);
    }

    [TearDown]
    public void TearDown()
    {
        consoleOutput.Dispose();
        consoleOutput = null;
    }

    [Test]
    public void DrawGameResult_CorrectAnswersCountIsZero_TotalQuestionCountIsZero()
    {
        // Arrange
        int totalQuestionCount = 0;
        int correctAnswersCount = 0;
        
        // Act
        ConsoleVisualizer_DrawGameResult_189e648b4a.DrawGameResult(totalQuestionCount, correctAnswersCount);

        // Assert
        string expectedOutput = $"You got {correctAnswersCount} out of {totalQuestionCount} question right. Continue with \"enter\".{Environment.NewLine}{Environment.NewLine}";
        Assert.AreEqual(expectedOutput, consoleOutput.ToString());
    }

    [Test]
    public void DrawGameResult_CorrectAnswersCountIsPositive_TotalQuestionCountIsZero()
    {
        // Arrange
        int totalQuestionCount = 0;
        int correctAnswersCount = 5;
        
        // Act
        ConsoleVisualizer_DrawGameResult_189e648b4a.DrawGameResult(totalQuestionCount, correctAnswersCount);

        // Assert
        string expectedOutput = $"You got {correctAnswersCount} out of {totalQuestionCount} question right. Continue with \"enter\".{Environment.NewLine}{Environment.NewLine}";
        Assert.AreEqual(expectedOutput, consoleOutput.ToString());
    }

    [Test]
    public void DrawGameResult_CorrectAnswersCountIsZero_TotalQuestionCountIsPositive()
    {
        // Arrange
        int totalQuestionCount = 5;
        int correctAnswersCount = 0;
        
        // Act
        ConsoleVisualizer_DrawGameResult_189e648b4a.DrawGameResult(totalQuestionCount, correctAnswersCount);

        // Assert
        string expectedOutput = $"You got {correctAnswersCount} out of {totalQuestionCount} question right. Continue with \"enter\".{Environment.NewLine}{Environment.NewLine}";
        Assert.AreEqual(expectedOutput, consoleOutput.ToString());
    }

    [Test]
    public void DrawGameResult_CorrectAnswersCountIsPositive_TotalQuestionCountIsPositive()
    {
        // Arrange
        int totalQuestionCount = 5;
        int correctAnswersCount = 3;
        
        // Act
        ConsoleVisualizer_DrawGameResult_189e648b4a.DrawGameResult(totalQuestionCount, correctAnswersCount);

        // Assert
        string expectedOutput = $"You got {correctAnswersCount} out of {totalQuestionCount} question right. Continue with \"enter\".{Environment.NewLine}{Environment.NewLine}";
        Assert.AreEqual(expectedOutput, consoleOutput.ToString());
    }
}
