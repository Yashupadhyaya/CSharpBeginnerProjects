// Test generated by RoostGPT for test test-csrepo using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using LunarDoggo.QuizGame.IO;
using System.Collections.Generic;
using Moq;

namespace LunarDoggo.QuizGame.IO.Test
{
    [TestFixture]
    public class FileQuizQuestionSerializer_DeserializeQuestions_4bbf2ded22
    {
        private Mock<IFileQuizQuestionSerializer> _serializerMock;
        private string _filePath;
        private string _fileContent;
        private IEnumerable<QuizQuestion> _questions;

        [SetUp]
        public void SetUp()
        {
            _serializerMock = new Mock<IFileQuizQuestionSerializer>();
            _filePath = "test.json";
            _fileContent = "[{\"Question\":\"What is 2+2?\",\"Answer\":\"4\"},{\"Question\":\"What is 3+3?\",\"Answer\":\"6\"}]";
            _questions = new List<QuizQuestion>
            {
                new QuizQuestion { Question = "What is 2+2?", Answer = "4" },
                new QuizQuestion { Question = "What is 3+3?", Answer = "6" }
            };

            _serializerMock.Setup(s => s.GetFileContent(_filePath)).Returns(_fileContent);
            _serializerMock.Setup(s => s.DeserializeJson(_fileContent)).Returns(_questions);
        }

        [Test]
        public void DeserializeQuestions_ReturnsCorrectQuestions()
        {
            var serializer = _serializerMock.Object;
            var questions = serializer.DeserializeQuestions();

            Assert.AreEqual(_questions, questions);
        }

        [Test]
        public void DeserializeQuestions_ThrowsException_WhenFileNotFound()
        {
            _serializerMock.Setup(s => s.GetFileContent(_filePath)).Throws<System.IO.FileNotFoundException>();

            var serializer = _serializerMock.Object;

            Assert.Throws<System.IO.FileNotFoundException>(() => serializer.DeserializeQuestions());
        }
    }
}
