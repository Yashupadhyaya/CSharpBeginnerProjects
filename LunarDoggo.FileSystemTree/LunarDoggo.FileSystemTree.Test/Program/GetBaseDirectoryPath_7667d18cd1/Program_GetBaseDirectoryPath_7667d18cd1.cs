// Test generated by RoostGPT for test nunit-test using AI Model gpt

using System;
using System.IO;
using NUnit.Framework;

namespace LunarDoggo.FileSystemTree.Tests
{
    [TestFixture]
    public class TestProgram_GetBaseDirectoryPath_7667d18cd1
    {
        private static string GetBaseDirectoryPath()
        {
            string path;
            do
            {
                Console.Clear(); //Clear the console window
                Console.Write("Please enter a valid directory path: ");
                path = Console.ReadLine();

            //While the user input is not a valid path and therefor doesn't exist, continue to prompt for a valid directory path
            } while (!Directory.Exists(path));
            return path;
        }

        [Test]
        public void TestValidDirectoryPath()
        {
            // TODO: Set up a valid directory path for testing purposes
            string validDirectoryPath = @"C:\Temp";
            Directory.CreateDirectory(validDirectoryPath);

            Console.SetIn(new StringReader(validDirectoryPath));
            string result = GetBaseDirectoryPath();

            Assert.AreEqual(validDirectoryPath, result);
            Directory.Delete(validDirectoryPath);
        }

        [Test]
        public void TestInvalidDirectoryPath()
        {
            // TODO: Set up an invalid directory path for testing purposes
            string invalidDirectoryPath = @"C:\InvalidDirectoryPath";
            string validDirectoryPath = @"C:\Temp";
            Directory.CreateDirectory(validDirectoryPath);

            Console.SetIn(new StringReader(invalidDirectoryPath + Environment.NewLine + validDirectoryPath));
            string result = GetBaseDirectoryPath();

            Assert.AreEqual(validDirectoryPath, result);
            Directory.Delete(validDirectoryPath);
        }
    }
}