// Test generated by RoostGPT for test roost-test using AI Model gpt

using System;
using System.IO;
using NUnit.Framework;

namespace LunarDoggo.FileSystemTree.Tests
{
    [TestFixture]
    public class TestProgram_GetBaseDirectoryPath_7667d18cd1
    {
        private static string GetBaseDirectoryPath()
        {
            string path;
            do
            {
                Console.Clear(); //Clear the console window
                Console.Write("Please enter a valid directory path: ");
                path = Console.ReadLine();

            //While the user input is not a valid path and therefor doesn't exist, continue to prompt for a valid directory path
            } while (!Directory.Exists(path));
            return path;
        }

        [Test]
        public void TestValidDirectoryPath()
        {
            // TODO: Replace the directory path with a valid directory path on your system
            string validDirectoryPath = @"C:\Users"; 
            using (StringReader stringReader = new StringReader(validDirectoryPath))
            {
                Console.SetIn(stringReader);
                string result = GetBaseDirectoryPath();
                Assert.AreEqual(validDirectoryPath, result);
            }
        }

        [Test]
        public void TestInvalidDirectoryPath()
        {
            // TODO: Replace the directory path with an invalid directory path on your system
            string invalidDirectoryPath = @"C:\InvalidDirectory";
            string validDirectoryPath = @"C:\Users";
            using (StringReader stringReader = new StringReader(invalidDirectoryPath + Environment.NewLine + validDirectoryPath))
            {
                Console.SetIn(stringReader);
                string result = GetBaseDirectoryPath();
                Assert.AreEqual(validDirectoryPath, result);
            }
        }
    }
}