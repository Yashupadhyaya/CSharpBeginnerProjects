// Test generated by RoostGPT for test test-csrepo using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using LunarDoggo.QuizGame.Visuals;
using Moq;
using System;

namespace LunarDoggo.QuizGame.Visuals.Test
{
    [TestFixture]
    public class ConsoleVisualizer_DrawAnswerStatus_d8bbac5d97
    {
        private MockRepository mockRepository;
        private Mock<QuizQuestionAnswer> mockQuizQuestionAnswer;

        [SetUp]
        public void SetUp()
        {
            this.mockRepository = new MockRepository(MockBehavior.Strict);
            this.mockQuizQuestionAnswer = this.mockRepository.Create<QuizQuestionAnswer>();
        }

        [TearDown]
        public void TearDown()
        {
            this.mockRepository.VerifyAll();
        }

        [Test]
        public void DrawAnswerStatus_CorrectAnswer_ShouldPrintCorrectMessage()
        {
            // Arrange
            var consoleVisualizer = new ConsoleVisualizer();
            bool correct = true;

            // Act
            using (StringWriter sw = new StringWriter())
            {
                Console.SetOut(sw);
                consoleVisualizer.DrawAnswerStatus(correct, mockQuizQuestionAnswer.Object);

                // Assert
                string expected = "Your answer is correct. Continue with \"enter\".\r\n";
                Assert.AreEqual(expected, sw.ToString());
            }
        }

        [Test]
        public void DrawAnswerStatus_WrongAnswer_ShouldPrintCorrectMessage()
        {
            // Arrange
            var consoleVisualizer = new ConsoleVisualizer();
            bool correct = false;
            string answer = "Test Answer";
            mockQuizQuestionAnswer.SetupGet(x => x.Answer).Returns(answer);

            // Act
            using (StringWriter sw = new StringWriter())
            {
                Console.SetOut(sw);
                consoleVisualizer.DrawAnswerStatus(correct, mockQuizQuestionAnswer.Object);

                // Assert
                string expected = $"Your answer isn't correct. The correct answer is: \"{answer}\". Continue with \"enter\".\r\n";
                Assert.AreEqual(expected, sw.ToString());
            }
        }
    }
}
