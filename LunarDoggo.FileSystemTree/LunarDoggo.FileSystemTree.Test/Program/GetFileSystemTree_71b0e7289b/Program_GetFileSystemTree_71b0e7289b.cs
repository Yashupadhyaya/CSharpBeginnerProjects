// Test generated by RoostGPT for test int-test using AI Type Open AI and AI Model gpt-3.5-turbo-0301

using NUnit.Framework;
using System.Collections.Immutable;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System;

namespace LunarDoggo.FileSystemTree
{
    [TestFixture]
    public class FileSystemTreeTests
    {
        [Test]
        public void TestProgram_GetFileSystemTree_71b0e7289b()
        {
            //Arrange
            DirectoryInfo directory = new DirectoryInfo(@"C:\Users\UserName\Documents\TestFolder");

            //Act
            FileSystemTreeItem tree = Program.GetFileSystemTree(directory);

            //Assert
            Assert.IsNotNull(tree);
            Assert.AreEqual(tree.Name, "TestFolder");
            Assert.AreEqual(tree.Type, FileSystemTreeItemType.Directory);
            Assert.AreEqual(tree.Children.Count, 2);
            Assert.AreEqual(tree.Children[0].Name, "SubFolder1");
            Assert.AreEqual(tree.Children[0].Type, FileSystemTreeItemType.Directory);
            Assert.AreEqual(tree.Children[0].Children.Count, 1);
            Assert.AreEqual(tree.Children[0].Children[0].Name, "TestFile1.txt");
            Assert.AreEqual(tree.Children[0].Children[0].Type, FileSystemTreeItemType.File);
            Assert.AreEqual(tree.Children[1].Name, "SubFolder2");
            Assert.AreEqual(tree.Children[1].Type, FileSystemTreeItemType.Directory);
            Assert.AreEqual(tree.Children[1].Children.Count, 1);
            Assert.AreEqual(tree.Children[1].Children[0].Name, "TestFile2.txt");
            Assert.AreEqual(tree.Children[1].Children[0].Type, FileSystemTreeItemType.File);
        }

        [Test]
        public void TestProgram_GetFileSystemTree_71b0e7289b_EmptyDirectory()
        {
            //Arrange
            DirectoryInfo directory = new DirectoryInfo(@"C:\Users\UserName\Documents\EmptyFolder");

            //Act
            FileSystemTreeItem tree = Program.GetFileSystemTree(directory);

            //Assert
            Assert.IsNotNull(tree);
            Assert.AreEqual(tree.Name, "EmptyFolder");
            Assert.AreEqual(tree.Type, FileSystemTreeItemType.Directory);
            Assert.AreEqual(tree.Children.Count, 0);
        }
    }
}
