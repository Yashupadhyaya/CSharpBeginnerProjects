// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class AnswerQuestion_82d7e10041
    {
        private GameState gameState;
        private QuizQuestion question1;
        private QuizQuestion question2;
        private QuizQuestionAnswer answer1;
        private QuizQuestionAnswer answer2;

        [SetUp]
        public void SetUp()
        {
            question1 = new QuizQuestion
            {
                Question = "Question 1",
                Answers = new QuizQuestionAnswer[] { answer1 = new QuizQuestionAnswer { Answer = "Answer 1", IsCorrect = true } }
            };

            question2 = new QuizQuestion
            {
                Question = "Question 2",
                Answers = new QuizQuestionAnswer[] { answer2 = new QuizQuestionAnswer { Answer = "Answer 2", IsCorrect = false } }
            };

            gameState = new GameState(new List<QuizQuestion> { question1, question2 });
        }

        [Test]
        public void AnswerQuestion_TestCurrentQuestionIsAnswered()
        {
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();

            Assert.IsTrue(gameState.IsCurrentQuestionAnswered);
        }

        [Test]
        public void AnswerQuestion_TestChosenAnswerIsCorrect()
        {
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();

            Assert.AreEqual(answer1, gameState.ChosenAnswer);
        }

        [Test]
        public void AnswerQuestion_TestAnsweredQuestionCountIsCorrect()
        {
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();

            Assert.AreEqual(1, gameState.AnsweredQuestionCount);
        }

        [Test]
        public void AnswerQuestion_TestCorrectAnswersCountIsCorrect()
        {
            gameState.MoveToNextQuestion();
            gameState.AnswerQuestion();

            Assert.AreEqual(1, gameState.CorrectAnswersCount);
        }

        [Test]
        public void AnswerQuestion_TestCurrentQuestionIsNull()
        {
            gameState.AnswerQuestion();

            Assert.IsNull(gameState.ChosenAnswer);
            Assert.IsFalse(gameState.IsCurrentQuestionAnswered);
        }
    }
}
