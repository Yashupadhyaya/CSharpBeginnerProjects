// Test generated by RoostGPT for test test-dummy using AI Type Open AI and AI Model gpt-4

using System.Collections.Immutable;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System;
using NUnit.Framework;
using LunarDoggo.FileSystemTree;

namespace LunarDoggo.FileSystemTree.Tests
{
    [TestFixture]
    public class ProgramTests
    {
        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_9fe43fbdc7()
        {
            // Arrange
            var fileSystemTreeItem = new FileSystemTreeItem
            {
                Name = "root",
                Type = "folder",
                Children = new List<FileSystemTreeItem>
                {
                    new FileSystemTreeItem { Name = "child1", Type = "file" },
                    new FileSystemTreeItem { Name = "child2", Type = "folder", Children = new List<FileSystemTreeItem>
                        {
                            new FileSystemTreeItem { Name = "subchild1", Type = "file" },
                            new FileSystemTreeItem { Name = "subchild2", Type = "file" }
                        }
                    }
                }
            };

            var expectedOutput = "root (folder)\n  child1 (file)\n  child2 (folder)\n    subchild1 (file)\n    subchild2 (file)\n";

            // Act
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);
                Program.OutputFileSystemTreeLevel(0, fileSystemTreeItem);

                // Assert
                Assert.AreEqual(expectedOutput, sw.ToString());
            }
        }

        [Test]
        public void TestProgram_OutputFileSystemTreeLevel_EmptyItem()
        {
            // Arrange
            var fileSystemTreeItem = new FileSystemTreeItem
            {
                Name = "root",
                Type = "folder",
                Children = null
            };

            var expectedOutput = "root (folder)\n";

            // Act
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);
                Program.OutputFileSystemTreeLevel(0, fileSystemTreeItem);

                // Assert
                Assert.AreEqual(expectedOutput, sw.ToString());
            }
        }
    }
}
