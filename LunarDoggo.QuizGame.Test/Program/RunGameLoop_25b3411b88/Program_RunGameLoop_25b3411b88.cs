// Test generated by RoostGPT for test test-csrepo using AI Type Open AI and AI Model gpt-4

using System.Collections.Generic;
using NUnit.Framework;
using Moq;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class Program_RunGameLoop_25b3411b88
    {
        private Mock<IVisualizer> _visualizerMock;
        private Program _program;

        [SetUp]
        public void SetUp()
        {
            _visualizerMock = new Mock<IVisualizer>();
            _program = new Program(_visualizerMock.Object);
        }

        [Test]
        public void RunGameLoop_GameNotFinished_DoTickCalled()
        {
            // Arrange
            var questions = new List<QuizQuestion> { new QuizQuestion(), new QuizQuestion() };
            var gameLoopMock = new Mock<GameLoop>(_visualizerMock.Object, questions);
            gameLoopMock.Setup(gl => gl.IsFinished).Returns(false);
            gameLoopMock.Setup(gl => gl.DoTick()).Verifiable();

            // Act
            _program.RunGameLoop(questions);

            // Assert
            gameLoopMock.Verify(gl => gl.DoTick(), Times.AtLeastOnce);
        }

        [Test]
        public void RunGameLoop_GameFinished_DrawPlayAgainCalled()
        {
            // Arrange
            var questions = new List<QuizQuestion> { new QuizQuestion(), new QuizQuestion() };
            var gameLoopMock = new Mock<GameLoop>(_visualizerMock.Object, questions);
            gameLoopMock.Setup(gl => gl.IsFinished).Returns(true);
            _visualizerMock.Setup(v => v.DrawPlayAgain()).Verifiable();

            // Act
            _program.RunGameLoop(questions);

            // Assert
            _visualizerMock.Verify(v => v.DrawPlayAgain(), Times.Once);
        }
    }
}
