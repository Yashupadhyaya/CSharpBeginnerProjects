// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.FileSystemTree;
using System.Collections.Generic;
using System;

namespace LunarDoggo.FileSystemTree.Test
{
    [TestFixture]
    public class FileSystemTreeItem_2e95657d4a
    {
        [Test]
        public void FileSystemTreeItem_Constructor_CorrectlyAssignsValues()
        {
            var children = new List<FileSystemTreeItem> { new FileSystemTreeItem("child1", FileSystemTreeItemType.File, null) };
            var item = new FileSystemTreeItem("item1", FileSystemTreeItemType.Directory, children);

            Assert.AreEqual("item1", item.Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, item.Type);
            CollectionAssert.AreEqual(children, item.Children);
        }

        [Test]
        public void FileSystemTreeItem_Constructor_ThrowsException_WhenNameIsNull()
        {
            Assert.Throws<ArgumentNullException>(() => new FileSystemTreeItem(null, FileSystemTreeItemType.Directory, null));
        }

        [Test]
        public void FileSystemTreeItem_Constructor_ThrowsException_WhenTypeIsUndefined()
        {
            Assert.Throws<ArgumentException>(() => new FileSystemTreeItem("item1", (FileSystemTreeItemType)999, null));
        }

        [Test]
        public void FileSystemTreeItem_Constructor_HandlesNullChildren()
        {
            var item = new FileSystemTreeItem("item1", FileSystemTreeItemType.Directory, null);

            Assert.AreEqual("item1", item.Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, item.Type);
            Assert.IsNull(item.Children);
        }
    }
}
