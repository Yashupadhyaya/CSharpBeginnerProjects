// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System.Collections.Generic;
using System.Text.Json;
using System.IO;
using System;
using NUnit.Framework;
using LunarDoggo.QuizGame.IO;

namespace LunarDoggo.QuizGame.IO.Test
{
    [TestFixture]
    public class FileQuizQuestionSerializer_275fddd8e9
    {
        private FileQuizQuestionSerializer fileQuizQuestionSerializer;
        private string filePath = "test.json";

        [SetUp]
        public void Setup()
        {
            this.fileQuizQuestionSerializer = new FileQuizQuestionSerializer(this.filePath);
        }

        [Test]
        public void DeserializeQuestions_FileExists_ReturnsQuestions()
        {
            // Arrange
            File.WriteAllText(this.filePath, "[{\"Question\":\"What is NUnit?\",\"Answers\":[{\"Answer\":\"A testing framework\",\"IsCorrect\":true},{\"Answer\":\"A game\",\"IsCorrect\":false}]}]");

            // Act
            IEnumerable<QuizQuestion> questions = this.fileQuizQuestionSerializer.DeserializeQuestions();

            // Assert
            Assert.IsNotNull(questions);
            Assert.IsNotEmpty(questions);
        }

        [Test]
        public void DeserializeQuestions_FileDoesNotExist_ReturnsEmpty()
        {
            // Arrange
            if (File.Exists(this.filePath))
            {
                File.Delete(this.filePath);
            }

            // Act
            IEnumerable<QuizQuestion> questions = this.fileQuizQuestionSerializer.DeserializeQuestions();

            // Assert
            Assert.IsNotNull(questions);
            Assert.IsEmpty(questions);
        }

        [TearDown]
        public void TearDown()
        {
            if (File.Exists(this.filePath))
            {
                File.Delete(this.filePath);
            }
        }
    }
}
