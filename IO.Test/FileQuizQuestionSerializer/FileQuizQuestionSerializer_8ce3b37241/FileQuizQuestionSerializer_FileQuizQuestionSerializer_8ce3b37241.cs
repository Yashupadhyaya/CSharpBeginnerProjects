// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;

[TestFixture]
public class FileQuizQuestionSerializer_FileQuizQuestionSerializer_8ce3b37241
{
    private string testFilePath;

    [SetUp]
    public void Setup()
    {
        // Create a temporary test file
        testFilePath = "test_file.txt";
        File.WriteAllText(testFilePath, "Test data for file");
    }

    [TearDown]
    public void TearDown()
    {
        // Delete the temporary test file
        File.Delete(testFilePath);
    }

    [Test]
    public void Constructor_ValidFilePath_ObjectCreated()
    {
        // Arrange
        string filePath = "valid_file.txt";

        // Act
        var serializer = new FileQuizQuestionSerializer(filePath);

        // Assert
        Assert.IsNotNull(serializer);
        Assert.AreEqual(filePath, serializer.FilePath);
    }

    [Test]
    public void Constructor_InvalidFilePath_ArgumentExceptionThrown()
    {
        // Arrange
        string filePath = "invalid_file.txt";

        // Act & Assert
        Assert.Throws<ArgumentException>(() => new FileQuizQuestionSerializer(filePath));
    }

    [Test]
    public void ReadQuizQuestions_ValidFilePath_ReturnsQuizQuestions()
    {
        // Arrange
        var serializer = new FileQuizQuestionSerializer(testFilePath);

        // Act
        var quizQuestions = serializer.ReadQuizQuestions();

        // Assert
        Assert.IsNotNull(quizQuestions);
        Assert.AreEqual(1, quizQuestions.Count());
        Assert.AreEqual("Test data for file", quizQuestions.First().Question);
    }

    [Test]
    public void ReadQuizQuestions_InvalidFilePath_FileNotFoundExceptionThrown()
    {
        // Arrange
        var serializer = new FileQuizQuestionSerializer("invalid_file.txt");

        // Act & Assert
        Assert.Throws<FileNotFoundException>(() => serializer.ReadQuizQuestions());
    }

    [Test]
    public void WriteQuizQuestions_ValidFilePath_SuccessfullyWritesQuizQuestions()
    {
        // Arrange
        var serializer = new FileQuizQuestionSerializer(testFilePath);
        var quizQuestions = new List<QuizQuestion>
        {
            new QuizQuestion { Question = "Question 1", Answer = "Answer 1" },
            new QuizQuestion { Question = "Question 2", Answer = "Answer 2" }
        };

        // Act
        serializer.WriteQuizQuestions(quizQuestions);

        // Assert
        var writtenQuestions = File.ReadAllLines(testFilePath);
        Assert.AreEqual(2, writtenQuestions.Length);
        Assert.AreEqual("Question 1;Answer 1", writtenQuestions[0]);
        Assert.AreEqual("Question 2;Answer 2", writtenQuestions[1]);
    }

    [Test]
    public void WriteQuizQuestions_InvalidFilePath_DirectoryNotFoundExceptionThrown()
    {
        // Arrange
        var serializer = new FileQuizQuestionSerializer("invalid_directory/test_file.txt");
        var quizQuestions = new List<QuizQuestion>
        {
            new QuizQuestion { Question = "Question 1", Answer = "Answer 1" },
            new QuizQuestion { Question = "Question 2", Answer = "Answer 2" }
        };

        // Act & Assert
        Assert.Throws<DirectoryNotFoundException>(() => serializer.WriteQuizQuestions(quizQuestions));
    }
}
