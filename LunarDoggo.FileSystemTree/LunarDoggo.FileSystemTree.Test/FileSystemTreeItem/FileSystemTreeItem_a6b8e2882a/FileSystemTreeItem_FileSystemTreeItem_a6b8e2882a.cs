// Test generated by RoostGPT for test csharpunit using AI Type Open AI and AI Model gpt-4

using System.Collections.Generic;
using NUnit.Framework;

namespace LunarDoggo.FileSystemTree.Tests
{
    public enum FileSystemTreeItemType
    {
        Folder,
        File
    }

    public class FileSystemTreeItem
    {
        public string name { get; set; }
        public FileSystemTreeItemType type { get; set; }
        public List<FileSystemTreeItem> children { get; set; }

        public FileSystemTreeItem(string name, FileSystemTreeItemType type, List<FileSystemTreeItem> children)
        {
            this.name = name;
            this.type = type;
            this.children = children;
        }
    }

    [TestFixture]
    public class FileSystemTreeItemTests
    {
        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_a6b8e2882a()
        {
            // Arrange
            string expectedName = "TestFolder";
            FileSystemTreeItemType expectedType = FileSystemTreeItemType.Folder;
            List<FileSystemTreeItem> expectedChildren = new List<FileSystemTreeItem>
            {
                new FileSystemTreeItem("Child1", FileSystemTreeItemType.File, new List<FileSystemTreeItem>()),
                new FileSystemTreeItem("Child2", FileSystemTreeItemType.File, new List<FileSystemTreeItem>())
            };

            // Act
            FileSystemTreeItem item = new FileSystemTreeItem(expectedName, expectedType, expectedChildren);

            // Assert
            Assert.AreEqual(expectedName, item.name);
            Assert.AreEqual(expectedType, item.type);
            Assert.AreEqual(expectedChildren, item.children);
        }

        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_NullChildren_a6b8e2882a()
        {
            // Arrange
            string expectedName = "TestFolder";
            FileSystemTreeItemType expectedType = FileSystemTreeItemType.Folder;

            // Act
            FileSystemTreeItem item = new FileSystemTreeItem(expectedName, expectedType, null);

            // Assert
            Assert.AreEqual(expectedName, item.name);
            Assert.AreEqual(expectedType, item.type);
            Assert.IsNull(item.children);
        }
    }
}
