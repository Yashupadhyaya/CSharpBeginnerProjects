// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System.Collections.Generic;
using System.Linq;
using System;
using NUnit.Framework;
using LunarDoggo.QuizGame;

namespace LunarDoggo.QuizGame.Test
{
    [TestFixture]
    public class AnswerQuestion_82d7e10041
    {
        private GameState gameState;
        private QuizQuestion question;
        private QuizQuestionAnswer correctAnswer;
        private QuizQuestionAnswer incorrectAnswer;

        [SetUp]
        public void Setup()
        {
            correctAnswer = new QuizQuestionAnswer { IsCorrect = true, Answer = "Correct", Id = Guid.NewGuid() };
            incorrectAnswer = new QuizQuestionAnswer { IsCorrect = false, Answer = "Incorrect", Id = Guid.NewGuid() };

            question = new QuizQuestion
            {
                Question = "Sample Question",
                Id = Guid.NewGuid(),
                Answers = new QuizQuestionAnswer[] { correctAnswer, incorrectAnswer }
            };

            gameState = new GameState(new List<QuizQuestion> { question });
            gameState.MoveToNextQuestion();
        }

        [Test]
        public void AnswerQuestion_CorrectAnswer_AnswersCountIncrease()
        {
            // Arrange
            int initialCount = gameState.AnsweredQuestionCount;

            // Act
            gameState.AnswerQuestion();

            // Assert
            Assert.AreEqual(initialCount + 1, gameState.AnsweredQuestionCount);
        }

        [Test]
        public void AnswerQuestion_CorrectAnswer_IsAnsweredTrue()
        {
            // Act
            gameState.AnswerQuestion();

            // Assert
            Assert.IsTrue(gameState.IsCurrentQuestionAnswered);
        }

        [Test]
        public void AnswerQuestion_CurrentQuestionNull_NoChange()
        {
            // Arrange
            gameState = new GameState(null);

            // Act
            gameState.AnswerQuestion();

            // Assert
            Assert.AreEqual(0, gameState.AnsweredQuestionCount);
            Assert.IsFalse(gameState.IsCurrentQuestionAnswered);
        }
    }
}
