// Test generated by RoostGPT for test unt-test using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;
using LunarDoggo.FileSystemTree;
using System.Collections.Immutable;
using System.IO;

namespace LunarDoggo.FileSystemTree.Tests
{
    [TestFixture]
    public class FileSystemTreeTests
    {
        [Test]
        public void TestGetFileSystemTree_EmptyBaseDirectory_ReturnsEmptyTree()
        {
            // Arrange
            DirectoryInfo baseDirectory = new DirectoryInfo("C:\\EmptyDirectory");

            // Act
            FileSystemTreeItem result = Program.GetFileSystemTree(baseDirectory);

            // Assert
            Assert.AreEqual("EmptyDirectory", result.Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, result.Type);
            Assert.IsEmpty(result.Children);
        }

        [Test]
        public void TestGetFileSystemTree_BaseDirectoryWithFilesAndSubdirectories_ReturnsValidTree()
        {
            // Arrange
            DirectoryInfo baseDirectory = new DirectoryInfo("C:\\MyDirectory");

            // Act
            FileSystemTreeItem result = Program.GetFileSystemTree(baseDirectory);

            // Assert
            Assert.AreEqual("MyDirectory", result.Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, result.Type);

            // Check subdirectories
            Assert.AreEqual("Subdirectory1", result.Children[0].Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, result.Children[0].Type);
            Assert.AreEqual("Subdirectory2", result.Children[1].Name);
            Assert.AreEqual(FileSystemTreeItemType.Directory, result.Children[1].Type);

            // Check files
            Assert.AreEqual("file1.txt", result.Children[2].Name);
            Assert.AreEqual(FileSystemTreeItemType.File, result.Children[2].Type);
            Assert.AreEqual("file2.txt", result.Children[3].Name);
            Assert.AreEqual(FileSystemTreeItemType.File, result.Children[3].Type);
            Assert.AreEqual("file3.txt", result.Children[4].Name);
            Assert.AreEqual(FileSystemTreeItemType.File, result.Children[4].Type);
        }
    }
}
