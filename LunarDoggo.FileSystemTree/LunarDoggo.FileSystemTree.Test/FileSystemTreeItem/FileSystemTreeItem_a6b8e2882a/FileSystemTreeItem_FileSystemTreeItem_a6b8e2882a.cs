// Test generated by RoostGPT for test nunit-test using AI Model gpt

using System;
using System.Collections.Generic;
using NUnit.Framework;

namespace LunarDoggo.FileSystemTree
{
    public enum FileSystemTreeItemType
    {
        File,
        Directory
    }

    public class FileSystemTreeItem
    {
        public IEnumerable<FileSystemTreeItem> children;
        public string name;
        public FileSystemTreeItemType type;

        public FileSystemTreeItem(string name, FileSystemTreeItemType type, IEnumerable<FileSystemTreeItem> children)
        {
            this.children = children;
            this.name = name;
            this.type = type;
        }
    }

    [TestFixture]
    public class FileSystemTreeItemTests
    {
        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_a6b8e2882a()
        {
            // Arrange
            var name = "test";
            var type = FileSystemTreeItemType.File;
            var children = new List<FileSystemTreeItem>
            {
                new FileSystemTreeItem("child1", FileSystemTreeItemType.File, null),
                new FileSystemTreeItem("child2", FileSystemTreeItemType.Directory, null)
            };

            // Act
            var treeItem = new FileSystemTreeItem(name, type, children);

            // Assert
            Assert.AreEqual(name, treeItem.name);
            Assert.AreEqual(type, treeItem.type);
            CollectionAssert.AreEqual(children, treeItem.children);
        }

        [Test]
        public void TestFileSystemTreeItem_FileSystemTreeItem_EmptyChildren()
        {
            // Arrange
            var name = "test";
            var type = FileSystemTreeItemType.Directory;
            var children = new List<FileSystemTreeItem>();

            // Act
            var treeItem = new FileSystemTreeItem(name, type, children);

            // Assert
            Assert.AreEqual(name, treeItem.name);
            Assert.AreEqual(type, treeItem.type);
            CollectionAssert.IsEmpty(treeItem.children);
        }
    }
}