// Test generated by RoostGPT for test test-dummy using AI Type Open AI and AI Model gpt-4

using System;
using NUnit.Framework;
using LunarDoggo.TicTacToe.GameBoard; // Added missing namespace

namespace TicTacToe
{
    [TestFixture]
    public class TestSuite
    {
        private GameBoard _gameBoard;

        [SetUp]
        public void Setup()
        {
            _gameBoard = new GameBoard();
        }

        [Test]
        public void TestGameBoard_HasWonColumn_a5b8d76a00()
        {
            byte player = 1;
            int columnIndex = 0;

            // TODO: Update the values of the tiles as per the test scenario
            _gameBoard.tiles[0, columnIndex] = player;
            _gameBoard.tiles[1, columnIndex] = player;
            _gameBoard.tiles[2, columnIndex] = player;

            bool result = _gameBoard.HasWonColumn(player, columnIndex);
            Assert.IsTrue(result, "Player should have won the column");
        }

        [Test]
        public void TestGameBoard_HasNotWonColumn_a5b8d76a00()
        {
            byte player = 1;
            int columnIndex = 0;

            // TODO: Update the values of the tiles as per the test scenario
            _gameBoard.tiles[0, columnIndex] = player;
            _gameBoard.tiles[1, columnIndex] = 0;
            _gameBoard.tiles[2, columnIndex] = player;

            bool result = _gameBoard.HasWonColumn(player, columnIndex);
            Assert.IsFalse(result, "Player should not have won the column");
        }
    }
}
