// Test generated by RoostGPT for test demo56 using AI Type Open AI and AI Model gpt-4

using System;
using NUnit.Framework;

// Make sure to include the correct namespace for your TicTacToe and GameBoard classes
// Replace 'YourNamespace' with the actual namespace where your GameBoard class is defined
using YourActualNamespace;

namespace TicTacToeTests
{
    [TestFixture]
    public class GameBoardTests
    {
        private GameBoard _gameBoard;

        [SetUp]
        public void Setup()
        {
            _gameBoard = new GameBoard();
            // TODO: Initialize the game board with desired state
        }

        [Test]
        public void TestGameBoard_HasWon_WhenPlayerHasWonHorizontally()
        {
            byte player = 1;
            // TODO: Set up the game board such that player 1 has won horizontally

            bool result = _gameBoard.HasWon(player);

            Assert.IsTrue(result, "Player should have won horizontally");
        }

        [Test]
        public void TestGameBoard_HasWon_WhenPlayerHasWonVertically()
        {
            byte player = 1;
            // TODO: Set up the game board such that player 1 has won vertically

            bool result = _gameBoard.HasWon(player);

            Assert.IsTrue(result, "Player should have won vertically");
        }

        [Test]
        public void TestGameBoard_HasWon_WhenPlayerHasWonDiagonally()
        {
            byte player = 1;
            // TODO: Set up the game board such that player 1 has won diagonally

            bool result = _gameBoard.HasWon(player);

            Assert.IsTrue(result, "Player should have won diagonally");
        }

        [Test]
        public void TestGameBoard_HasWon_WhenPlayerHasNotWon()
        {
            byte player = 1;
            // TODO: Set up the game board such that player 1 has not won

            bool result = _gameBoard.HasWon(player);

            Assert.IsFalse(result, "Player should not have won");
        }
    }
}
