// ********RoostGPT********
// Test generated by RoostGPT for test csharp-testing using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using NUnit.Framework;
using LunarDoggo.QuizGame.IO;
using System.IO;
using System.Collections.Generic;
using System;

namespace LunarDoggo.QuizGame.IO.Test
{
    [TestFixture]
    public class FileQuizQuestionSerializer_275fddd8e9_Tests
    {
        private string testFilePath;

        [SetUp]
        public void SetUp()
        {
            testFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "TestFiles", "TestQuizQuestions.json");

            // TODO: populate the testFilePath with well-structured QuizQuestion json data for testing
        }

        [Test]
        public void FileQuizQuestionSerializer_Constructor_ValidFilePath_Test()
        {
            FileQuizQuestionSerializer serializer = new FileQuizQuestionSerializer(testFilePath);
            Assert.IsNotNull(serializer);
        }

        [Test]
        public void FileQuizQuestionSerializer_Constructor_InvalidFilePath_Test()
        {
            Assert.Throws<ArgumentException>(() => new FileQuizQuestionSerializer(null));
            Assert.Throws<ArgumentException>(() => new FileQuizQuestionSerializer(string.Empty));
            Assert.Throws<FileNotFoundException>(() => new FileQuizQuestionSerializer("nonexistentFilePath"));
        }

        [Test]
        public void FileQuizQuestionSerializer_DeserializeQuestions_ValidFileContent_Test()
        {
            FileQuizQuestionSerializer serializer = new FileQuizQuestionSerializer(testFilePath);
            IEnumerable<QuizQuestion> questions = serializer.DeserializeQuestions();
            Assert.IsNotEmpty(questions);
        }

        [Test]
        public void FileQuizQuestionSerializer_DeserializeQuestions_InvalidFileContent_Test()
        {
            // TODO: modify the testFilePath to contain invalid QuizQuestion json data
            FileQuizQuestionSerializer serializer = new FileQuizQuestionSerializer(testFilePath);
            Assert.Throws<JsonException>(() => serializer.DeserializeQuestions());
        }

        [TearDown]
        public void TearDown()
        {
            // TODO: delete the testFilePath if necessary
        }
    }
}
